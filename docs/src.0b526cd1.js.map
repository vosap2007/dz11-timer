{"version":3,"sources":["index.js"],"names":["Timer","selector","targetDate","refElement","document","querySelector","date","setInterval","onTick","value","String","padStart","days","pad","Math","floor","deltaTime","hours","mins","secs","currentTime","Date","now","updateClocface","getTimeComponents","textContent","timer","start"],"mappings":";AAoCA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EApCMA,IAAAA,EAAAA,WACmC,SAAA,EAAA,GAAvBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAa,EAAA,KAAA,GAClCC,KAAAA,WAAaC,SAASC,cAAcJ,GACpCK,KAAAA,KAAOJ,EAiCd,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA/BY,MAAA,WAAA,IAAA,EAAA,KACJK,YAAY,WACR,EAAKC,UACN,OA4BX,CAAA,IAAA,MAzBKC,MAAAA,SAAAA,GACIC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAwBnC,CAAA,IAAA,oBAtBqB,MAAA,WAKZ,MAAA,CAACC,KAJK,KAAKC,IAAIC,KAAKC,MAAM,KAAKC,UAAa,QAIrCC,MAHA,KAAKJ,IAAIC,KAAKC,MAAO,KAAKC,UAAa,MAAyB,OAGzDE,KAFR,KAAKL,IAAIC,KAAKC,MAAO,KAAKC,UAAa,KAAoB,MAE7CG,KADd,KAAKN,IAAIC,KAAKC,MAAO,KAAKC,UAAa,IAAc,SAkBpE,CAAA,IAAA,SAdW,MAAA,WACHI,IAAAA,EAAcC,KAAKC,MACpBN,KAAAA,UAAY,KAAKV,KAAOc,EACxBG,KAAAA,eAAe,KAAKC,uBAW3B,CAAA,IAAA,iBAR6C,MAAA,SAAA,GAA3BZ,IAAAA,EAAAA,EAAAA,KAAMK,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC7BhB,KAAAA,WAAWsB,YAAkBb,GAAAA,OAAAA,EAAQK,KAAAA,OAAAA,EAASC,KAAAA,OAAAA,EAAQC,KAAAA,OAAAA,OAO9D,EApCMnB,GAgCA0B,EAAQ,IAAI1B,EAAM,CACvBC,SAAU,WACPC,WAAY,IAAImB,KAAK,kBAEzBK,EAAMC","file":"src.0b526cd1.js","sourceRoot":"..\\src","sourcesContent":["class Timer {\r\n    constructor({ selector, targetDate}) {\r\n\t\tthis.refElement = document.querySelector(selector);\r\n\t\tthis.date = targetDate;\r\n    }\r\n    start() {\r\n        setInterval(() => {\r\n            this.onTick();\r\n        }, 1000);\r\n    }\r\n\t\r\n\tpad(value) {\r\n\t\treturn String(value).padStart(2, '0');\r\n\t}\r\n\tgetTimeComponents() {\r\n\t\tconst days = this.pad(Math.floor(this.deltaTime / (1000 * 60 * 60 * 24)));\r\n\t\tconst hours = this.pad(Math.floor((this.deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n\t\tconst mins = this.pad(Math.floor((this.deltaTime % (1000 * 60 * 60)) / (1000 * 60)));\r\n\t\tconst secs = this.pad(Math.floor((this.deltaTime % (1000 * 60)) / 1000));\r\n\t\treturn {days, hours, mins, secs};\r\n\t}\r\n\t\r\n\tonTick () {\r\n\t\tconst currentTime = Date.now();\r\n\t\tthis.deltaTime = this.date - currentTime;\r\n\t\tthis.updateClocface(this.getTimeComponents())\r\n\t}\r\n\t\r\n\tupdateClocface({ days, hours, mins, secs }) {\r\n\t  this.refElement.textContent  = `${days}:${hours}:${mins}:${secs}`;\r\n\t}\r\n}\r\nconst timer = new Timer({\r\n\tselector: '#timer-1',\r\n    targetDate: new Date('Dec 17, 2020')\r\n});\r\ntimer.start();"]}